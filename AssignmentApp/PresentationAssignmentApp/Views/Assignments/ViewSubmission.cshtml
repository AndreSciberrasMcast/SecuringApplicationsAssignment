@model SecuringApplicationsAssignment.Application.ViewModels.ViewSubmissionViewModel
@using PresentationAssignmentApp.Helpers
@using System.Web
@{
    ViewData["Title"] = "ViewSubmission";
}


<div class="mt-5">
    <h4>Submission for @Model.Submission.Assignment.Name by @Model.Submission.Member.FirstName @Model.Submission.Member.LastName</h4>
    <hr />
    <dl class="row">
        <div class="col-4">
            <a href="/Assignments/ViewFile?id=@HttpUtility.UrlEncode(CryptographicHelper.SymmetricEncrypt(Model.Submission.Id.ToString()))" class="btn btn-success">View File</a>
        </div>
        <div class="col-8">
            <form asp-action="AddComment">
                @Html.AntiForgeryToken()
                @foreach (var comment in ViewBag.Comments)
                {
                    <div class="row mb-5 ">
                        <div class="col-3">
                            <p>@comment.Member.FirstName @comment.Member.LastName</p>
                            <p>@comment.Time</p>
                        </div>
                        <div class="col-6">
                            @Html.Raw(comment.Data)
                        </div>
                        <hr />
                    </div>
                }

                <input asp-for="Submission.Id" type="hidden" value="@Model.Submission.Id" />
                <input asp-for="Comment.Data" type="text" value="Enter a comment" />
                <button type="submit" class="btn btn-info">Add comment</button>
            </form>

        </div>

    </dl>
</div>

@if (User.IsInRole("Teacher"))
    {
        <script>

            var isAuth = @ViewData["isAuthentic"];

            var _0x30cb = ['207408yMAONo', '925081VSQMgG', '1788356XekICh', '489905OCnWWQ', '1179235DZYYLy', '589898eDJLRk', 'File\x20is\x20not\x20authentic!!', '1262337nRntXM', '2HYGwNM']; function _0x1873(_0x3b5110, _0x1de27e) { _0x3b5110 = _0x3b5110 - 0x18f; var _0x30cbda = _0x30cb[_0x3b5110]; return _0x30cbda; } var _0x513601 = _0x1873; (function (_0x11a9ea, _0x31e81b) { var _0x361e31 = _0x1873; while (!![]) { try { var _0x4353e3 = parseInt(_0x361e31(0x197)) * parseInt(_0x361e31(0x193)) + parseInt(_0x361e31(0x18f)) + -parseInt(_0x361e31(0x190)) + parseInt(_0x361e31(0x196)) + -parseInt(_0x361e31(0x195)) + -parseInt(_0x361e31(0x194)) + -parseInt(_0x361e31(0x192)); if (_0x4353e3 === _0x31e81b) break; else _0x11a9ea['push'](_0x11a9ea['shift']()); } catch (_0x4550f9) { _0x11a9ea['push'](_0x11a9ea['shift']()); } } }(_0x30cb, 0xeb075)); isAuth == 0x0 && alert(_0x513601(0x191));
        </script>
    }
